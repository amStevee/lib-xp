name: Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # Set up environment variables
      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env

      # Set up Docker and bring up the services
      - name: Set up Docker
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          API_URL: ${{ secrets.API_URL }}
        run: |
          docker compose -f compose.dev.yaml up -d --build
        # sleep 30 
        # Wait for services to be ready

      # Run tests in the server
      - name: Run server tests
        id: server-tests
        run: |
          if ! docker compose -f compose.dev.yaml exec server pnpm test; then
            echo "Server tests failed. Fetching logs..."
            docker compose -f compose.dev.yaml logs server
            exit 1
          fi
      
      # Run tests in the client
      - name: Run client tests
        id: client-tests
        run: |
          if ! docker compose -f compose.dev.yaml exec web pnpm test; then
            echo "Client tests failed. Fetching logs..."
            docker compose -f compose.dev.yaml logs client
            exit 1
          fi
        continue-on-error: true

      # stop and remove containers after tests
      - name: Tear down Docker
        run: docker compose -f compose.dev.yaml down

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Deploy
      uses: DefangLabs/defang-github-action@v1.1.0